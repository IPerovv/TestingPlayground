name: Form message and send
on:
  workflow_call:
    inputs:
      build_result:
        required: true
        type: string
      unit_result:
        required: true
        type: string
      lint_result:
        required: true
        type: string
      instr_result:
        required: true
        type: string
      repo:
        required: true
        type: string
      branch:
        required: true
        type: string
      actor:
        required: true
        type: string

jobs:
  form-message:
    name: Form message to send
    runs-on: ubuntu-latest
    outputs:
      message: ${{ steps.format.outputs.message }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Format message
        id: format
        run: |
          escape_markdown() {
            echo "$1" | sed -E 's/([*_`\[])/\\\1/g'
          }
          
          echo "Build: ${{ inputs.build_result }}"
          echo "Unit Tests: ${{ inputs.unit_result }}"
          echo "Lint: ${{ inputs.lint_result }}"
          echo "Instrumentation: ${{ inputs.instr_result }}"
          echo "repo: ${{ inputs.repo }}"
          echo "branch: ${{ inputs.branch }}"
          echo "actor: ${{ inputs.actor }}"

          BUILD_RESULT=$(escape_markdown "${{ inputs.build_result }}")
          UNIT_RESULT=$(escape_markdown "${{ inputs.unit_result }}")
          LINT_RESULT=$(escape_markdown "${{ inputs.lint_result }}")
          INSTRUMENTATION_RESULT=$(escape_markdown "${{ inputs.instr_result }}")
        
          REPO_NAME=$(escape_markdown "${{ inputs.repo }}")
          BRANCH_NAME=$(escape_markdown "${{ inputs.branch }}")
          ACTOR=$(escape_markdown "${{ inputs.actor }}")
          
          if [[ "$BUILD_RESULT" == "success" && "$UNIT_RESULT" == "success" && "$LINT_RESULT" == "success" && "$INSTRUMENTATION_RESULT" == "success" ]]; then
            EMOJI="‚úÖ"
          elif [[ "$BUILD_RESULT" == "failure" || "$UNIT_RESULT" == "failure" || "$LINT_RESULT" == "failure" || "$INSTRUMENTATION_RESULT" == "failure" ]]; then
            EMOJI="‚ùå"
          else
            EMOJI="‚ö†Ô∏è"
          fi

          MESSAGE=$(cat <<EOF
          ${EMOJI} *Android CI completed*

          _______________________________
          üîß *Build*: $BUILD_RESULT
          üß™ *Unit Tests*: $UNIT_RESULT
          üßπ *Lint*: $LINT_RESULT
          üì± *Instrumentation*: $INSTRUMENTATION_RESULT
          
          _______________________________
          üì¶ *Repo*: $REPO_NAME
          üåø *Branch*: $BRANCH_NAME
          üôã *Triggered by*: $ACTOR
          EOF
          )
          echo "message<<EOF" >> $GITHUB_OUTPUT
          echo "$MESSAGE" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

  notify-tg:
    name: Send Telegram message
    uses: ./.github/workflows/reusable/notifiers/notify-telegram.yml
    needs: form-message
    with:
      message: ${{ needs.form-message.outputs.message }}
    secrets: inherit