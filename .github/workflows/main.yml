name: Android CI

on:
  pull_request:
    branches: [main]

jobs:
  build:
    name: Build project
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Assemble Debug
        run: ./gradlew assembleDebug

      - name: Upload build outputs
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            app/build/outputs/
            app/build/intermediates/
            app/build/tmp/

  unit-tests:
    name: Run unit tests
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin

      - uses: android-actions/setup-android@v3

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: app/build/

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Run unit tests
        run: ./gradlew testDebugUnitTest

      - name: Upload unit test reports
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-report
          path: |
            app/build/test-results/testDebugUnitTest/
            app/build/reports/tests/testDebugUnitTest/
  

  lint:
    name: Run Android Lint
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin

      - uses: android-actions/setup-android@v3

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: app/build/

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Run lint
        run: ./gradlew lintDebug

      - name: Upload lint reports
        uses: actions/upload-artifact@v4
        with:
          name: lint-report
          path: |
            app/build/reports/lint-results-debug.html
            app/build/reports/lint-results-debug.xml

  instrumentation-tests:
    name: Run Instrumentation Tests
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin

      - uses: android-actions/setup-android@v3

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: app/build/

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Run instrumentation tests on emulator
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 30
          target: default
          arch: x86_64
          profile: pixel
          emulator-options: -no-window -no-audio -no-boot-anim
          script: ./gradlew connectedDebugAndroidTest

      - name: Upload instrumentation test reports
        uses: actions/upload-artifact@v4
        with:
          name: instrumentation-test-report
          path: |
            app/build/outputs/androidTest-results/
            app/build/reports/androidTests/connected/

  notify_tg:
    name: Send Telegram Notification
    needs: [ build, unit-tests, lint, instrumentation-tests ]
    runs-on: ubuntu-latest

    steps:
      - name: Send Telegram message
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.DESK_TELEGRAM_BOT }}
          TELEGRAM_CHAT_ID: ${{ secrets.MUSASHINO_GROUP_ID }}
          BUILD_RESULT: ${{ needs.build.result }}
          UNIT_RESULT: ${{ needs.unit-tests.result }}
          LINT_RESULT: ${{ needs.lint.result }}
          INSTRUMENTATION_RESULT: ${{ needs.instrumentation-tests.result }}
        run: |
          if [[ "$BUILD_RESULT" == "success" && "$UNIT_RESULT" == "success" && "$LINT_RESULT" == "success" && "$INSTRUMENTATION_RESULT" == "success" ]]; then
            EMOJI="‚úÖ"
          elif [[ "$BUILD_RESULT" == "failure" || "$UNIT_RESULT" == "failure" || "$LINT_RESULT" == "failure" || "$INSTRUMENTATION_RESULT" == "failure" ]]; then
            EMOJI="‚ùå"
          else
            EMOJI="‚ö†Ô∏è"
          fi
          
          MESSAGE=$(cat <<EOF
          ${EMOJI} *Android CI completed*
          
          üîß *Build*: ${BUILD_RESULT}
          üß™ *Unit Tests*: ${UNIT_RESULT}
          üßπ *Lint*: ${LINT_RESULT}
          üì± *Instrumentation*: ${INSTRUMENTATION_RESULT}
          EOF
          )
          
          curl -s -X POST "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage" \
                  -d chat_id="${TELEGRAM_CHAT_ID}" \
                  -d text="${MESSAGE}" \
                  -d parse_mode=Markdown
