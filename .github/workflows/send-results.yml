name: Send Telegram Results
on:
  workflow_call:
    inputs:
      build_result:
        required: true
        type: string
      unit_result:
        required: true
        type: string
      lint_result:
        required: true
        type: string
      instr_result:
        required: true
        type: string

jobs:
  notify:
    name: Notify Telegram
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Format Telegram message
        id: format
        run: |
          echo "Build: ${{ inputs.build_result }}"
          echo "Unit Tests: ${{ inputs.unit_result }}"
          echo "Lint: ${{ inputs.lint_result }}"
          echo "Instrumentation: ${{ inputs.instr_result }}"
          
          BUILD_RESULT="${{ inputs.build_result }}"
          UNIT_RESULT="${{ inputs.unit_result }}"
          LINT_RESULT="${{ inputs.lint_result }}"
          INSTRUMENTATION_RESULT="${{ inputs.instr_result }}"

          if [[ "$BUILD_RESULT" == "success" && "$UNIT_RESULT" == "success" && "$LINT_RESULT" == "success" && "$INSTRUMENTATION_RESULT" == "success" ]]; then
            EMOJI="‚úÖ"
          elif [[ "$BUILD_RESULT" == "failure" || "$UNIT_RESULT" == "failure" || "$LINT_RESULT" == "failure" || "$INSTRUMENTATION_RESULT" == "failure" ]]; then
            EMOJI="‚ùå"
          else
            EMOJI="‚ö†Ô∏è"
          fi

          MESSAGE=$(cat <<EOF
          ${EMOJI} *Android CI completed*

          üîß *Build*: $BUILD_RESULT
          üß™ *Unit Tests*: $UNIT_RESULT
          üßπ *Lint*: $LINT_RESULT
          üì± *Instrumentation*: $INSTRUMENTATION_RESULT
          EOF
          )
          MESSAGE="${MESSAGE//$'\n'/\\n}"
          echo "message=$MESSAGE" >> $GITHUB_OUTPUT

  call-notify:
    name: Send Telegram message
    uses: ./.github/workflows/notify-telegram.yml
    needs: notify
    with:
      message: ${{ needs.notify.outputs.message }}
    secrets: inherit